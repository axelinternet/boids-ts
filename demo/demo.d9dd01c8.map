{"version":3,"sources":["../../node_modules/element-size/index.js","../../node_modules/canvas-fit-margin-ts/dist/index.js","../Flock.ts","../../node_modules/gl-vec2/epsilon.js","../../node_modules/gl-vec2/create.js","../../node_modules/gl-vec2/clone.js","../../node_modules/gl-vec2/fromValues.js","../../node_modules/gl-vec2/copy.js","../../node_modules/gl-vec2/set.js","../../node_modules/gl-vec2/equals.js","../../node_modules/gl-vec2/exactEquals.js","../../node_modules/gl-vec2/add.js","../../node_modules/gl-vec2/subtract.js","../../node_modules/gl-vec2/sub.js","../../node_modules/gl-vec2/multiply.js","../../node_modules/gl-vec2/mul.js","../../node_modules/gl-vec2/divide.js","../../node_modules/gl-vec2/div.js","../../node_modules/gl-vec2/inverse.js","../../node_modules/gl-vec2/min.js","../../node_modules/gl-vec2/max.js","../../node_modules/gl-vec2/rotate.js","../../node_modules/gl-vec2/floor.js","../../node_modules/gl-vec2/ceil.js","../../node_modules/gl-vec2/round.js","../../node_modules/gl-vec2/scale.js","../../node_modules/gl-vec2/scaleAndAdd.js","../../node_modules/gl-vec2/distance.js","../../node_modules/gl-vec2/dist.js","../../node_modules/gl-vec2/squaredDistance.js","../../node_modules/gl-vec2/sqrDist.js","../../node_modules/gl-vec2/length.js","../../node_modules/gl-vec2/len.js","../../node_modules/gl-vec2/squaredLength.js","../../node_modules/gl-vec2/sqrLen.js","../../node_modules/gl-vec2/negate.js","../../node_modules/gl-vec2/normalize.js","../../node_modules/gl-vec2/dot.js","../../node_modules/gl-vec2/cross.js","../../node_modules/gl-vec2/lerp.js","../../node_modules/gl-vec2/random.js","../../node_modules/gl-vec2/transformMat2.js","../../node_modules/gl-vec2/transformMat2d.js","../../node_modules/gl-vec2/transformMat3.js","../../node_modules/gl-vec2/transformMat4.js","../../node_modules/gl-vec2/forEach.js","../../node_modules/gl-vec2/limit.js","../../node_modules/gl-vec2/index.js","../gl-vec2-utils.ts","../Boid.ts","../../node_modules/json-stringify-safe/stringify.js","../../node_modules/random-seed/index.js","draw-utils.ts","scene.ts","demo.ts"],"names":["stringify","require","Mash","n","mash","data","toString","i","length","h","charCodeAt","uheprng","seed","o","j","c","p","s","Array","k","Math","random","rawprng","t","range","floor","string","count","String","fromCharCode","cleanString","inStr","replace","hashString","key","value","initState","addEntropy","args","arguments","push","prototype","slice","call","hash","Date","getTime","join","done","Number","MAX_VALUE","floatBetween","min","max","intBetween","create","module","exports"],"mappings":"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","file":"demo.d9dd01c8.map","sourceRoot":"../src/demo","sourcesContent":["module.exports = getSize\n\nfunction getSize(element) {\n  // Handle cases where the element is not already\n  // attached to the DOM by briefly appending it\n  // to document.body, and removing it again later.\n  if (element === window || element === document.body) {\n    return [window.innerWidth, window.innerHeight]\n  }\n\n  if (!element.parentNode) {\n    var temporary = true\n    document.body.appendChild(element)\n  }\n\n  var bounds = element.getBoundingClientRect()\n  var styles = getComputedStyle(element)\n  var height = (bounds.height|0)\n    + parse(styles.getPropertyValue('margin-top'))\n    + parse(styles.getPropertyValue('margin-bottom'))\n  var width  = (bounds.width|0)\n    + parse(styles.getPropertyValue('margin-left'))\n    + parse(styles.getPropertyValue('margin-right'))\n\n  if (temporary) {\n    document.body.removeChild(element)\n  }\n\n  return [width, height]\n}\n\nfunction parse(prop) {\n  return parseFloat(prop) || 0\n}\n","\"use strict\";var __assign=this&&this.__assign||function(){return(__assign=Object.assign||function(e){for(var t,i=1,n=arguments.length;i<n;i++)for(var r in t=arguments[i])Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);return e}).apply(this,arguments)};exports.__esModule=!0;var getSize=require(\"element-size\"),defaultOptions={parent:null,margin:0,scale:1};function createFit(r,e){var t=__assign({},defaultOptions,e),s=t.margin,a=t.scale,o=t.parent;function i(){var e,t,i=o||r.parentNode;if(i&&i!==document.body){var n=getSize(i);e=0|n[0],t=0|n[1]}else e=window.innerWidth,t=window.innerHeight;return e-=2*s,t-=2*s,r.width=e*a,r.height=t*a,r.style.width=e+\"px\",r.style.height=t+\"px\",[e,t]}return r.style.position=r.style.position||\"relative\",r.style.top=\"0\",r.style.left=\"0\",r.style.margin=s+\"px\",i(),i}exports.createFit=createFit;","import { Boid } from './Boid'\nimport { vec2 } from 'gl-vec2'\n\nexport class Flock {\n  boids: Array<Boid>\n\n  constructor() {\n    this.boids = [] // Initialize the array\n  }\n\n  run(target: vec2 = null) {\n    for (let boid of this.boids) {\n      boid.run(this.boids, target) // Passing the entire list of boids to each boid individually\n    }\n  }\n\n  addBoid(b: Boid) {\n    this.boids.push(b)\n  }\n}\n","module.exports = 0.000001\n","module.exports = create\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nfunction create() {\n    var out = new Float32Array(2)\n    out[0] = 0\n    out[1] = 0\n    return out\n}","module.exports = clone\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nfunction clone(a) {\n    var out = new Float32Array(2)\n    out[0] = a[0]\n    out[1] = a[1]\n    return out\n}","module.exports = fromValues\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nfunction fromValues(x, y) {\n    var out = new Float32Array(2)\n    out[0] = x\n    out[1] = y\n    return out\n}","module.exports = copy\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nfunction copy(out, a) {\n    out[0] = a[0]\n    out[1] = a[1]\n    return out\n}","module.exports = set\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nfunction set(out, x, y) {\n    out[0] = x\n    out[1] = y\n    return out\n}","module.exports = equals\n\nvar EPSILON = require('./epsilon')\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction equals(a, b) {\n  var a0 = a[0]\n  var a1 = a[1]\n  var b0 = b[0]\n  var b1 = b[1]\n  return (Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)))\n}\n","module.exports = exactEquals\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1]\n}\n","module.exports = add\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction add(out, a, b) {\n    out[0] = a[0] + b[0]\n    out[1] = a[1] + b[1]\n    return out\n}","module.exports = subtract\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction subtract(out, a, b) {\n    out[0] = a[0] - b[0]\n    out[1] = a[1] - b[1]\n    return out\n}","module.exports = require('./subtract')\n","module.exports = multiply\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction multiply(out, a, b) {\n    out[0] = a[0] * b[0]\n    out[1] = a[1] * b[1]\n    return out\n}","module.exports = require('./multiply')\n","module.exports = divide\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction divide(out, a, b) {\n    out[0] = a[0] / b[0]\n    out[1] = a[1] / b[1]\n    return out\n}","module.exports = require('./divide')\n","module.exports = inverse\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0]\n  out[1] = 1.0 / a[1]\n  return out\n}\n","module.exports = min\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction min(out, a, b) {\n    out[0] = Math.min(a[0], b[0])\n    out[1] = Math.min(a[1], b[1])\n    return out\n}","module.exports = max\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nfunction max(out, a, b) {\n    out[0] = Math.max(a[0], b[0])\n    out[1] = Math.max(a[1], b[1])\n    return out\n}","module.exports = rotate\n\n/**\n * Rotates a vec2 by an angle\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to rotate\n * @param {Number} angle the angle of rotation (in radians)\n * @returns {vec2} out\n */\nfunction rotate(out, a, angle) {\n  var c = Math.cos(angle),\n      s = Math.sin(angle)\n  var x = a[0],\n      y = a[1]\n\n  out[0] = x * c - y * s\n  out[1] = x * s + y * c\n\n  return out\n}\n\n","module.exports = floor\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0])\n  out[1] = Math.floor(a[1])\n  return out\n}\n","module.exports = ceil\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0])\n  out[1] = Math.ceil(a[1])\n  return out\n}\n","module.exports = round\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nfunction round(out, a) {\n  out[0] = Math.round(a[0])\n  out[1] = Math.round(a[1])\n  return out\n}\n","module.exports = scale\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nfunction scale(out, a, b) {\n    out[0] = a[0] * b\n    out[1] = a[1] * b\n    return out\n}","module.exports = scaleAndAdd\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nfunction scaleAndAdd(out, a, b, scale) {\n    out[0] = a[0] + (b[0] * scale)\n    out[1] = a[1] + (b[1] * scale)\n    return out\n}","module.exports = distance\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nfunction distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1]\n    return Math.sqrt(x*x + y*y)\n}","module.exports = require('./distance')\n","module.exports = squaredDistance\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nfunction squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1]\n    return x*x + y*y\n}","module.exports = require('./squaredDistance')\n","module.exports = length\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nfunction length(a) {\n    var x = a[0],\n        y = a[1]\n    return Math.sqrt(x*x + y*y)\n}","module.exports = require('./length')\n","module.exports = squaredLength\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nfunction squaredLength(a) {\n    var x = a[0],\n        y = a[1]\n    return x*x + y*y\n}","module.exports = require('./squaredLength')\n","module.exports = negate\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nfunction negate(out, a) {\n    out[0] = -a[0]\n    out[1] = -a[1]\n    return out\n}","module.exports = normalize\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nfunction normalize(out, a) {\n    var x = a[0],\n        y = a[1]\n    var len = x*x + y*y\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len)\n        out[0] = a[0] * len\n        out[1] = a[1] * len\n    }\n    return out\n}","module.exports = dot\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nfunction dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1]\n}","module.exports = cross\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0]\n    out[0] = out[1] = 0\n    out[2] = z\n    return out\n}","module.exports = lerp\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nfunction lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1]\n    out[0] = ax + t * (b[0] - ax)\n    out[1] = ay + t * (b[1] - ay)\n    return out\n}","module.exports = random\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nfunction random(out, scale) {\n    scale = scale || 1.0\n    var r = Math.random() * 2.0 * Math.PI\n    out[0] = Math.cos(r) * scale\n    out[1] = Math.sin(r) * scale\n    return out\n}","module.exports = transformMat2\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1]\n    out[0] = m[0] * x + m[2] * y\n    out[1] = m[1] * x + m[3] * y\n    return out\n}","module.exports = transformMat2d\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1]\n    out[0] = m[0] * x + m[2] * y + m[4]\n    out[1] = m[1] * x + m[3] * y + m[5]\n    return out\n}","module.exports = transformMat3\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1]\n    out[0] = m[0] * x + m[3] * y + m[6]\n    out[1] = m[1] * x + m[4] * y + m[7]\n    return out\n}","module.exports = transformMat4\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nfunction transformMat4(out, a, m) {\n    var x = a[0], \n        y = a[1]\n    out[0] = m[0] * x + m[4] * y + m[12]\n    out[1] = m[1] * x + m[5] * y + m[13]\n    return out\n}","module.exports = forEach\n\nvar vec = require('./create')()\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nfunction forEach(a, stride, offset, count, fn, arg) {\n    var i, l\n    if(!stride) {\n        stride = 2\n    }\n\n    if(!offset) {\n        offset = 0\n    }\n    \n    if(count) {\n        l = Math.min((count * stride) + offset, a.length)\n    } else {\n        l = a.length\n    }\n\n    for(i = offset; i < l; i += stride) {\n        vec[0] = a[i]\n        vec[1] = a[i+1]\n        fn(vec, vec, arg)\n        a[i] = vec[0]\n        a[i+1] = vec[1]\n    }\n    \n    return a\n}","module.exports = limit;\n\n/**\n * Limit the magnitude of this vector to the value used for the `max`\n * parameter.\n *\n * @param  {vec2} the vector to limit\n * @param  {Number} max the maximum magnitude for the vector\n * @returns {vec2} out\n */\nfunction limit(out, a, max) {\n  var mSq = a[0] * a[0] + a[1] * a[1];\n\n  if (mSq > max * max) {\n    var n = Math.sqrt(mSq);\n    out[0] = a[0] / n * max;\n    out[1] = a[1] / n * max;\n  } else {\n    out[0] = a[0];\n    out[1] = a[1];\n  }\n\n  return out;\n}\n","module.exports = {\n  EPSILON: require('./epsilon')\n  , create: require('./create')\n  , clone: require('./clone')\n  , fromValues: require('./fromValues')\n  , copy: require('./copy')\n  , set: require('./set')\n  , equals: require('./equals')\n  , exactEquals: require('./exactEquals')\n  , add: require('./add')\n  , subtract: require('./subtract')\n  , sub: require('./sub')\n  , multiply: require('./multiply')\n  , mul: require('./mul')\n  , divide: require('./divide')\n  , div: require('./div')\n  , inverse: require('./inverse')\n  , min: require('./min')\n  , max: require('./max')\n  , rotate: require('./rotate')\n  , floor: require('./floor')\n  , ceil: require('./ceil')\n  , round: require('./round')\n  , scale: require('./scale')\n  , scaleAndAdd: require('./scaleAndAdd')\n  , distance: require('./distance')\n  , dist: require('./dist')\n  , squaredDistance: require('./squaredDistance')\n  , sqrDist: require('./sqrDist')\n  , length: require('./length')\n  , len: require('./len')\n  , squaredLength: require('./squaredLength')\n  , sqrLen: require('./sqrLen')\n  , negate: require('./negate')\n  , normalize: require('./normalize')\n  , dot: require('./dot')\n  , cross: require('./cross')\n  , lerp: require('./lerp')\n  , random: require('./random')\n  , transformMat2: require('./transformMat2')\n  , transformMat2d: require('./transformMat2d')\n  , transformMat3: require('./transformMat3')\n  , transformMat4: require('./transformMat4')\n  , forEach: require('./forEach')\n  , limit: require('./limit')\n}\n","import { vec2, normalize, scale } from 'gl-vec2'\n\nexport function map(value: number, istart: number, istop: number, ostart: number, ostop: number) {\n  return ostart + (ostop - ostart) * ((value - istart) / (istop - istart))\n}\n\nexport function setLen(out: vec2, a: vec2, x: number) {\n  normalize(out, a)\n  scale(out, out, x)\n  return out\n}\n\nexport function heading(a: vec2) {\n  return Math.atan2(a[1], a[0])\n}\n","import {\n  vec2,\n  create as createVector,\n  set,\n  add,\n  scale,\n  limit,\n  sub,\n  normalize,\n  sqrDist,\n  len,\n  lerp,\n} from 'gl-vec2'\nimport { setLen, map } from './gl-vec2-utils'\n\nexport type BoidOptions = {\n  center: vec2\n  canvasSize: vec2\n  velocity?: vec2\n  r?: number\n  maxspeed?: number\n  maxforce?: number\n  separationScale?: number\n  alignScale?: number\n  cohesionScale?: number\n  desiredSeparation?: number\n  neighborDistance?: number\n  arriveRadius?: number\n}\n\nexport class Boid {\n  acceleration: vec2\n  velocity: vec2\n  position: vec2\n  r: number\n  maxspeed: number\n  maxforce: number\n  width: number\n  height: number\n\n  separationScale: number\n  alignScale: number\n  cohesionScale: number\n  desiredSeparation: number\n  neighborDistance: number\n  arriveRadius: number\n\n  desiredSeek: vec2\n  steerSeek: vec2\n  separateDiff: vec2\n  steerSeparate: vec2\n\n  sumCohesion: vec2\n  sumAlign: vec2\n\n  oldVelocity: vec2\n\n  smoothVelocity: vec2\n\n  constructor(opts: BoidOptions) {\n    this.acceleration = set(createVector(), 0, 0)\n    this.velocity = set(createVector(), opts.velocity[0], opts.velocity[1])\n    this.oldVelocity = set(createVector(), opts.velocity[0], opts.velocity[1])\n    this.smoothVelocity = set(createVector(), opts.velocity[0], opts.velocity[1])\n    this.position = set(createVector(), opts.center[0], opts.center[1])\n    this.r = opts.r || 3\n    this.maxspeed = opts.maxspeed || 3 // Maximum speed\n    this.maxforce = opts.maxforce || 0.05 // Maximum steering force\n    this.width = opts.canvasSize[0]\n    this.height = opts.canvasSize[1]\n\n    this.separationScale = opts.separationScale || 1.5\n    this.alignScale = opts.alignScale || 1.0\n    this.cohesionScale = opts.cohesionScale || 1.0\n\n    this.desiredSeparation = (opts.desiredSeparation || 25) ** 2\n    this.neighborDistance = (opts.neighborDistance || 50) ** 2\n\n    this.arriveRadius = opts.arriveRadius || 100\n\n    this.desiredSeek = set(createVector(), 0, 0)\n    this.steerSeek = set(createVector(), 0, 0)\n    this.separateDiff = set(createVector(), 0, 0)\n\n    this.steerSeparate = set(createVector(), 0, 0)\n\n    this.sumCohesion = set(createVector(), 0, 0)\n    this.sumAlign = set(createVector(), 0, 0)\n  }\n\n  run(boids: ReadonlyArray<Boid>, target: vec2 = null) {\n    if (target) {\n      this.arrive(target)\n    } else {\n      this.flock(boids)\n    }\n\n    this.update()\n    this.borders()\n  }\n\n  arrive(target: vec2) {\n    const desired = sub(createVector(), target, this.position) // A vector pointing from the location to the target\n    const d = len(desired)\n    // Scale with arbitrary damping within arriveRadius pixels\n    if (d < this.arriveRadius) {\n      const m = map(d, 0, this.arriveRadius, 0, this.maxspeed)\n      setLen(desired, desired, m)\n    } else {\n      setLen(desired, desired, this.maxspeed)\n    }\n\n    // Steering = Desired minus Velocity\n    const steer = sub(desired, desired, this.velocity)\n    limit(steer, steer, this.maxforce) // Limit to maximum steering force\n\n    // We could add mass here if we want A = F / M\n    add(this.acceleration, this.acceleration, steer)\n  }\n\n  // We accumulate a new acceleration each time based on three rules\n  flock(boids: ReadonlyArray<Boid>) {\n    set(this.oldVelocity, this.smoothVelocity[0], this.smoothVelocity[1])\n\n    set(this.sumCohesion, 0, 0)\n    set(this.sumAlign, 0, 0)\n\n    const sep = this.separate(boids) // Separation\n    const ali = this.align(boids) // Alignment\n    const coh = this.cohesion(boids) // Cohesion\n    // Arbitrarily weight these forces\n    scale(sep, sep, this.separationScale)\n    scale(ali, ali, this.alignScale)\n    scale(coh, coh, this.cohesionScale)\n    // Add the force vectors to acceleration\n\n    // We could add mass here if we want A = F / M\n    add(this.acceleration, this.acceleration, sep)\n\n    // We could add mass here if we want A = F / M\n    add(this.acceleration, this.acceleration, ali)\n\n    // We could add mass here if we want A = F / M\n    add(this.acceleration, this.acceleration, coh)\n  }\n\n  // Method to update location\n  update() {\n    // Update velocity\n    add(this.velocity, this.velocity, this.acceleration)\n    // Limit speed\n    limit(this.velocity, this.velocity, this.maxspeed)\n    add(this.position, this.position, this.velocity)\n    // Reset accelertion to 0 each cycle\n    scale(this.acceleration, this.acceleration, 0)\n\n    lerp(this.smoothVelocity, this.oldVelocity, this.velocity, 0.1)\n  }\n\n  // A method that calculates and applies a steering force towards a target\n  // STEER = DESIRED MINUS VELOCITY\n  seek(target: vec2) {\n    sub(this.desiredSeek, target, this.position) // A vector pointing from the location to the target\n    // Normalize desired and scale to maximum speed\n    normalize(this.desiredSeek, this.desiredSeek)\n    scale(this.desiredSeek, this.desiredSeek, this.maxspeed)\n    // Steering = Desired minus Velocity\n    sub(this.steerSeek, this.desiredSeek, this.velocity)\n    limit(this.steerSeek, this.steerSeek, this.maxforce) // Limit to maximum steering force\n    return this.steerSeek\n  }\n\n  // Wraparound\n  borders() {\n    if (this.position[0] < -this.r) this.position[0] = this.width + this.r\n    if (this.position[1] < -this.r) this.position[1] = this.height + this.r\n    if (this.position[0] > this.width + this.r) this.position[0] = -this.r\n    if (this.position[1] > this.height + this.r) this.position[1] = -this.r\n  }\n\n  // Separation\n  // Method checks for nearby boids and steers away\n  separate(boids: ReadonlyArray<Boid>) {\n    const desiredseparation = this.desiredSeparation\n    set(this.steerSeparate, 0, 0)\n    let count = 0\n    // For every boid in the system, check if it's too close\n    for (let i = 0; i < boids.length; i++) {\n      const d = sqrDist(this.position, boids[i].position)\n      // If the distance is greater than 0 and less than an arbitrary amount (0 when you are yourself)\n      if (d > 0 && d < desiredseparation) {\n        // Calculate vector pointing away from neighbor\n        sub(this.separateDiff, this.position, boids[i].position)\n        normalize(this.separateDiff, this.separateDiff)\n        scale(this.separateDiff, this.separateDiff, 1 / d) // Weight by distance\n        add(this.steerSeparate, this.steerSeparate, this.separateDiff)\n        count++ // Keep track of how many\n      }\n    }\n    // Average -- divide by how many\n    if (count > 0) {\n      scale(this.steerSeparate, this.steerSeparate, 1 / count)\n    }\n\n    // As long as the vector is greater than 0\n    if (len(this.steerSeparate) > 0) {\n      // Implement Reynolds: Steering = Desired - Velocity\n      normalize(this.steerSeparate, this.steerSeparate)\n\n      scale(this.steerSeparate, this.steerSeparate, this.maxspeed)\n      sub(this.steerSeparate, this.steerSeparate, this.velocity)\n      limit(this.steerSeparate, this.steerSeparate, this.maxforce)\n    }\n    return this.steerSeparate\n  }\n\n  // Alignment\n  // For every nearby boid in the system, calculate the average velocity\n  align(boids: ReadonlyArray<Boid>) {\n    const neighborDistance = this.neighborDistance\n    const sum = set(this.sumAlign, 0, 0)\n    let count = 0\n    for (let i = 0; i < boids.length; i++) {\n      const d = sqrDist(this.position, boids[i].position)\n      if (d > 0 && d < neighborDistance) {\n        add(sum, sum, boids[i].velocity)\n        count++\n      }\n    }\n    if (count > 0) {\n      scale(sum, sum, 1 / count)\n      normalize(sum, sum)\n      scale(sum, sum, this.maxspeed)\n      const steer = sub(sum, sum, this.velocity)\n      limit(steer, steer, this.maxforce)\n      return steer\n    } else {\n      return set(createVector(), 0, 0)\n    }\n  }\n\n  // Cohesion\n  // For the average location (i.e. center) of all nearby boids, calculate steering vector towards that location\n  cohesion(boids: ReadonlyArray<Boid>) {\n    const neighborDistance = this.neighborDistance\n    const sum = set(this.sumCohesion, 0, 0) // Start with empty vector to accumulate all locations\n    let count = 0\n    for (let i = 0; i < boids.length; i++) {\n      const d = sqrDist(this.position, boids[i].position)\n      if (d > 0 && d < neighborDistance) {\n        add(sum, sum, boids[i].position) // Add location\n        count++\n      }\n    }\n    if (count > 0) {\n      scale(sum, sum, 1 / count)\n      return this.seek(sum) // Steer towards the location\n    } else {\n      return set(createVector(), 0, 0)\n    }\n  }\n}\n","exports = module.exports = stringify\nexports.getSerialize = serializer\n\nfunction stringify(obj, replacer, spaces, cycleReplacer) {\n  return JSON.stringify(obj, serializer(replacer, cycleReplacer), spaces)\n}\n\nfunction serializer(replacer, cycleReplacer) {\n  var stack = [], keys = []\n\n  if (cycleReplacer == null) cycleReplacer = function(key, value) {\n    if (stack[0] === value) return \"[Circular ~]\"\n    return \"[Circular ~.\" + keys.slice(0, stack.indexOf(value)).join(\".\") + \"]\"\n  }\n\n  return function(key, value) {\n    if (stack.length > 0) {\n      var thisPos = stack.indexOf(this)\n      ~thisPos ? stack.splice(thisPos + 1) : stack.push(this)\n      ~thisPos ? keys.splice(thisPos, Infinity, key) : keys.push(key)\n      if (~stack.indexOf(value)) value = cycleReplacer.call(this, key, value)\n    }\n    else stack.push(value)\n\n    return replacer == null ? value : replacer.call(this, key, value)\n  }\n}\n","/*\n * random-seed\n * https://github.com/skratchdot/random-seed\n *\n * This code was originally written by Steve Gibson and can be found here:\n *\n * https://www.grc.com/otg/uheprng.htm\n *\n * It was slightly modified for use in node, to pass jshint, and a few additional\n * helper functions were added.\n *\n * Copyright (c) 2013 skratchdot\n * Dual Licensed under the MIT license and the original GRC copyright/license\n * included below.\n */\n/*\t============================================================================\n\t\t\t\t\t\t\t\t\tGibson Research Corporation\n\t\t\t\tUHEPRNG - Ultra High Entropy Pseudo-Random Number Generator\n\t============================================================================\n\tLICENSE AND COPYRIGHT:  THIS CODE IS HEREBY RELEASED INTO THE PUBLIC DOMAIN\n\tGibson Research Corporation releases and disclaims ALL RIGHTS AND TITLE IN\n\tTHIS CODE OR ANY DERIVATIVES. Anyone may be freely use it for any purpose.\n\t============================================================================\n\tThis is GRC's cryptographically strong PRNG (pseudo-random number generator)\n\tfor JavaScript. It is driven by 1536 bits of entropy, stored in an array of\n\t48, 32-bit JavaScript variables.  Since many applications of this generator,\n\tincluding ours with the \"Off The Grid\" Latin Square generator, may require\n\tthe deteriministic re-generation of a sequence of PRNs, this PRNG's initial\n\tentropic state can be read and written as a static whole, and incrementally\n\tevolved by pouring new source entropy into the generator's internal state.\n\t----------------------------------------------------------------------------\n\tENDLESS THANKS are due Johannes Baagoe for his careful development of highly\n\trobust JavaScript implementations of JS PRNGs.  This work was based upon his\n\tJavaScript \"Alea\" PRNG which is based upon the extremely robust Multiply-\n\tWith-Carry (MWC) PRNG invented by George Marsaglia. MWC Algorithm References:\n\thttp://www.GRC.com/otg/Marsaglia_PRNGs.pdf\n\thttp://www.GRC.com/otg/Marsaglia_MWC_Generators.pdf\n\t----------------------------------------------------------------------------\n\tThe quality of this algorithm's pseudo-random numbers have been verified by\n\tmultiple independent researchers. It handily passes the fermilab.ch tests as\n\twell as the \"diehard\" and \"dieharder\" test suites.  For individuals wishing\n\tto further verify the quality of this algorithm's pseudo-random numbers, a\n\t256-megabyte file of this algorithm's output may be downloaded from GRC.com,\n\tand a Microsoft Windows scripting host (WSH) version of this algorithm may be\n\tdownloaded and run from the Windows command prompt to generate unique files\n\tof any size:\n\tThe Fermilab \"ENT\" tests: http://fourmilab.ch/random/\n\tThe 256-megabyte sample PRN file at GRC: https://www.GRC.com/otg/uheprng.bin\n\tThe Windows scripting host version: https://www.GRC.com/otg/wsh-uheprng.js\n\t----------------------------------------------------------------------------\n\tQualifying MWC multipliers are: 187884, 686118, 898134, 1104375, 1250205,\n\t1460910 and 1768863. (We use the largest one that's < 2^21)\n\t============================================================================ */\n'use strict';\nvar stringify = require('json-stringify-safe');\n\n/*\t============================================================================\nThis is based upon Johannes Baagoe's carefully designed and efficient hash\nfunction for use with JavaScript.  It has a proven \"avalanche\" effect such\nthat every bit of the input affects every bit of the output 50% of the time,\nwhich is good.\tSee: http://baagoe.com/en/RandomMusings/hash/avalanche.xhtml\n============================================================================\n*/\nvar Mash = function () {\n\tvar n = 0xefc8249d;\n\tvar mash = function (data) {\n\t\tif (data) {\n\t\t\tdata = data.toString();\n\t\t\tfor (var i = 0; i < data.length; i++) {\n\t\t\t\tn += data.charCodeAt(i);\n\t\t\t\tvar h = 0.02519603282416938 * n;\n\t\t\t\tn = h >>> 0;\n\t\t\t\th -= n;\n\t\t\t\th *= n;\n\t\t\t\tn = h >>> 0;\n\t\t\t\th -= n;\n\t\t\t\tn += h * 0x100000000; // 2^32\n\t\t\t}\n\t\t\treturn (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n\t\t} else {\n\t\t\tn = 0xefc8249d;\n\t\t}\n\t};\n\treturn mash;\n};\n\nvar uheprng = function (seed) {\n\treturn (function () {\n\t\tvar o = 48; // set the 'order' number of ENTROPY-holding 32-bit values\n\t\tvar c = 1; // init the 'carry' used by the multiply-with-carry (MWC) algorithm\n\t\tvar p = o; // init the 'phase' (max-1) of the intermediate variable pointer\n\t\tvar s = new Array(o); // declare our intermediate variables array\n\t\tvar i; // general purpose local\n\t\tvar j; // general purpose local\n\t\tvar k = 0; // general purpose local\n\n\t\t// when our \"uheprng\" is initially invoked our PRNG state is initialized from the\n\t\t// browser's own local PRNG. This is okay since although its generator might not\n\t\t// be wonderful, it's useful for establishing large startup entropy for our usage.\n\t\tvar mash = new Mash(); // get a pointer to our high-performance \"Mash\" hash\n\n\t\t// fill the array with initial mash hash values\n\t\tfor (i = 0; i < o; i++) {\n\t\t\ts[i] = mash(Math.random());\n\t\t}\n\n\t\t// this PRIVATE (internal access only) function is the heart of the multiply-with-carry\n\t\t// (MWC) PRNG algorithm. When called it returns a pseudo-random number in the form of a\n\t\t// 32-bit JavaScript fraction (0.0 to <1.0) it is a PRIVATE function used by the default\n\t\t// [0-1] return function, and by the random 'string(n)' function which returns 'n'\n\t\t// characters from 33 to 126.\n\t\tvar rawprng = function () {\n\t\t\tif (++p >= o) {\n\t\t\t\tp = 0;\n\t\t\t}\n\t\t\tvar t = 1768863 * s[p] + c * 2.3283064365386963e-10; // 2^-32\n\t\t\treturn s[p] = t - (c = t | 0);\n\t\t};\n\n\t\t// this EXPORTED function is the default function returned by this library.\n\t\t// The values returned are integers in the range from 0 to range-1. We first\n\t\t// obtain two 32-bit fractions (from rawprng) to synthesize a single high\n\t\t// resolution 53-bit prng (0 to <1), then we multiply this by the caller's\n\t\t// \"range\" param and take the \"floor\" to return a equally probable integer.\n\t\tvar random = function (range) {\n\t\t\treturn Math.floor(range * (rawprng() + (rawprng() * 0x200000 | 0) * 1.1102230246251565e-16)); // 2^-53\n\t\t};\n\n\t\t// this EXPORTED function 'string(n)' returns a pseudo-random string of\n\t\t// 'n' printable characters ranging from chr(33) to chr(126) inclusive.\n\t\trandom.string = function (count) {\n\t\t\tvar i;\n\t\t\tvar s = '';\n\t\t\tfor (i = 0; i < count; i++) {\n\t\t\t\ts += String.fromCharCode(33 + random(94));\n\t\t\t}\n\t\t\treturn s;\n\t\t};\n\n\t\t// this PRIVATE \"hash\" function is used to evolve the generator's internal\n\t\t// entropy state. It is also called by the EXPORTED addEntropy() function\n\t\t// which is used to pour entropy into the PRNG.\n\t\tvar hash = function () {\n\t\t\tvar args = Array.prototype.slice.call(arguments);\n\t\t\tfor (i = 0; i < args.length; i++) {\n\t\t\t\tfor (j = 0; j < o; j++) {\n\t\t\t\t\ts[j] -= mash(args[i]);\n\t\t\t\t\tif (s[j] < 0) {\n\t\t\t\t\t\ts[j] += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// this EXPORTED \"clean string\" function removes leading and trailing spaces and non-printing\n\t\t// control characters, including any embedded carriage-return (CR) and line-feed (LF) characters,\n\t\t// from any string it is handed. this is also used by the 'hashstring' function (below) to help\n\t\t// users always obtain the same EFFECTIVE uheprng seeding key.\n\t\trandom.cleanString = function (inStr) {\n\t\t\tinStr = inStr.replace(/(^\\s*)|(\\s*$)/gi, ''); // remove any/all leading spaces\n\t\t\tinStr = inStr.replace(/[\\x00-\\x1F]/gi, ''); // remove any/all control characters\n\t\t\tinStr = inStr.replace(/\\n /, '\\n'); // remove any/all trailing spaces\n\t\t\treturn inStr; // return the cleaned up result\n\t\t};\n\n\t\t// this EXPORTED \"hash string\" function hashes the provided character string after first removing\n\t\t// any leading or trailing spaces and ignoring any embedded carriage returns (CR) or Line Feeds (LF)\n\t\trandom.hashString = function (inStr) {\n\t\t\tinStr = random.cleanString(inStr);\n\t\t\tmash(inStr); // use the string to evolve the 'mash' state\n\t\t\tfor (i = 0; i < inStr.length; i++) { // scan through the characters in our string\n\t\t\t\tk = inStr.charCodeAt(i); // get the character code at the location\n\t\t\t\tfor (j = 0; j < o; j++) { //\t\"mash\" it into the UHEPRNG state\n\t\t\t\t\ts[j] -= mash(k);\n\t\t\t\t\tif (s[j] < 0) {\n\t\t\t\t\t\ts[j] += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// this EXPORTED function allows you to seed the random generator.\n\t\trandom.seed = function (seed) {\n\t\t\tif (typeof seed === 'undefined' || seed === null) {\n\t\t\t\tseed = Math.random();\n\t\t\t}\n\t\t\tif (typeof seed !== 'string') {\n\t\t\t\tseed = stringify(seed, function (key, value) {\n\t\t\t\t\tif (typeof value === 'function') {\n\t\t\t\t\t\treturn (value).toString();\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t}\n\t\t\trandom.initState();\n\t\t\trandom.hashString(seed);\n\t\t};\n\n\t\t// this handy exported function is used to add entropy to our uheprng at any time\n\t\trandom.addEntropy = function ( /* accept zero or more arguments */ ) {\n\t\t\tvar args = [];\n\t\t\tfor (i = 0; i < arguments.length; i++) {\n\t\t\t\targs.push(arguments[i]);\n\t\t\t}\n\t\t\thash((k++) + (new Date().getTime()) + args.join('') + Math.random());\n\t\t};\n\n\t\t// if we want to provide a deterministic startup context for our PRNG,\n\t\t// but without directly setting the internal state variables, this allows\n\t\t// us to initialize the mash hash and PRNG's internal state before providing\n\t\t// some hashing input\n\t\trandom.initState = function () {\n\t\t\tmash(); // pass a null arg to force mash hash to init\n\t\t\tfor (i = 0; i < o; i++) {\n\t\t\t\ts[i] = mash(' '); // fill the array with initial mash hash values\n\t\t\t}\n\t\t\tc = 1; // init our multiply-with-carry carry\n\t\t\tp = o; // init our phase\n\t\t};\n\n\t\t// we use this (optional) exported function to signal the JavaScript interpreter\n\t\t// that we're finished using the \"Mash\" hash function so that it can free up the\n\t\t// local \"instance variables\" is will have been maintaining.  It's not strictly\n\t\t// necessary, of course, but it's good JavaScript citizenship.\n\t\trandom.done = function () {\n\t\t\tmash = null;\n\t\t};\n\n\t\t// if we called \"uheprng\" with a seed value, then execute random.seed() before returning\n\t\tif (typeof seed !== 'undefined') {\n\t\t\trandom.seed(seed);\n\t\t}\n\n\t\t// Returns a random integer between 0 (inclusive) and range (exclusive)\n\t\trandom.range = function (range) {\n\t\t\treturn random(range);\n\t\t};\n\n\t\t// Returns a random float between 0 (inclusive) and 1 (exclusive)\n\t\trandom.random = function () {\n\t\t\treturn random(Number.MAX_VALUE - 1) / Number.MAX_VALUE;\n\t\t};\n\n\t\t// Returns a random float between min (inclusive) and max (exclusive)\n\t\trandom.floatBetween = function (min, max) {\n\t\t\treturn random.random() * (max - min) + min;\n\t\t};\n\n\t\t// Returns a random integer between min (inclusive) and max (inclusive)\n\t\trandom.intBetween = function (min, max) {\n\t\t\treturn Math.floor(random.random() * (max - min + 1)) + min;\n\t\t};\n\n\t\t// when our main outer \"uheprng\" function is called, after setting up our\n\t\t// initial variables and entropic state, we return an \"instance pointer\"\n\t\t// to the internal anonymous function which can then be used to access\n\t\t// the uheprng's various exported functions.  As with the \".done\" function\n\t\t// above, we should set the returned value to 'null' once we're finished\n\t\t// using any of these functions.\n\t\treturn random;\n\t}());\n};\n\n// Modification for use in node:\nuheprng.create = function (seed) {\n\treturn new uheprng(seed);\n};\nmodule.exports = uheprng;\n","export function drawBoid(\n  context: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  theta: number,\n  r: number,\n) {\n  context.save()\n  context.translate(x, y)\n  context.rotate(theta)\n  context.beginPath()\n  context.moveTo(0, -r * 2)\n  context.lineTo(-r, r * 2)\n  context.lineTo(r, r * 2)\n  context.closePath()\n  context.stroke()\n  context.restore()\n}\n","import { Flock } from '../Flock'\nimport { Boid, BoidOptions } from '../Boid'\nimport { RandomSeed, create as createRandom } from 'random-seed'\nimport { create as createVector, set, vec2 } from 'gl-vec2'\nimport { heading } from '../gl-vec2-utils'\nimport { drawBoid } from './draw-utils'\n\nconst randomGenerator: RandomSeed = createRandom('dudee')\nconst random = randomGenerator.floatBetween\n\nconst CANVAS_WITH_1 = false\nconst SAVE_EVERTYTHING = false\n\nconst normalizationConst = CANVAS_WITH_1 ? 600 : 1\n\nfunction getBoidOpts(canvasWidth: number, canvasHeight: number): BoidOptions {\n  return {\n    center: [canvasWidth / 2, canvasHeight / 2],\n    canvasSize: [canvasWidth, canvasHeight],\n\n    velocity: set(\n      createVector(),\n      random(-1, 1) / normalizationConst,\n      random(-1, 1) / normalizationConst,\n    ),\n    r: 3 / normalizationConst,\n    maxspeed: 3 / normalizationConst,\n    maxforce: 0.05 / normalizationConst,\n\n    separationScale: 1.5,\n    alignScale: 1.0,\n    cohesionScale: 1.0,\n\n    desiredSeparation: 25 / normalizationConst,\n    neighborDistance: 50 / normalizationConst,\n  }\n}\n\nexport function createScene(context: CanvasRenderingContext2D, width: number, height: number) {\n  const flock = new Flock()\n  let frameCount = 0\n  let target: vec2 = null\n\n  for (let i = 0; i < 60; i++) {\n    let b = new Boid(getBoidOpts(CANVAS_WITH_1 ? 1 : width, CANVAS_WITH_1 ? 1 : height))\n    flock.addBoid(b)\n  }\n\n  const gradient = context.createLinearGradient(0, 0, width, 0)\n  gradient.addColorStop(0, '#00b4db')\n  gradient.addColorStop(1, '#0083b0')\n\n  const onMouseDown = (ev: MouseEvent) => {\n    target = [300, 600]\n  }\n\n  document.addEventListener('mousedown', onMouseDown)\n  if ((module as any).hot) {\n    ;(module as any).hot.dispose(() => document.removeEventListener('mousedown', onMouseDown))\n  }\n\n  function loop() {\n    frameCount++\n    flock.run(target)\n\n    context.clearRect(0, 0, width, height)\n    context.fillStyle = gradient\n    context.fillRect(0, 0, width, height)\n\n    context.fillStyle = 'black'\n    context.strokeStyle = 'black'\n\n    for (let i = 0; i < flock.boids.length; ++i) {\n      const boid = flock.boids[i]\n      const x = boid.position[0] * (CANVAS_WITH_1 ? width : 1)\n      const y = boid.position[1] * (CANVAS_WITH_1 ? height : 1)\n      const theta = heading(boid.velocity) + Math.PI / 2\n      drawBoid(context, x, y, theta, boid.r * (CANVAS_WITH_1 ? normalizationConst : 1))\n    }\n\n    if (target) {\n      context.strokeRect(target[0] - 50, target[1] - 50, 100, 100)\n    }\n\n    if (!SAVE_EVERTYTHING) {\n      requestAnimationFrame(loop)\n    } else {\n      const data = {\n        boids: flock.boids.map(boid => ({\n          position: [boid.position[0], boid.position[1]],\n          rotation: heading(boid.smoothVelocity) + Math.PI / 2,\n        })),\n      }\n      postData(`http://localhost:8080/save/${frameCount}`, data).then(() => loop())\n    }\n  }\n\n  requestAnimationFrame(loop)\n}\n\nfunction postData(url = ``, payload = {}) {\n  return fetch(url, {\n    method: 'POST',\n    mode: 'cors',\n    headers: new Headers({\n      'Content-Type': 'application/json',\n    }),\n    body: JSON.stringify(payload),\n  })\n}\n","import { createFit } from 'canvas-fit-margin-ts'\nimport { createScene } from './scene'\n\nconst scale = window.devicePixelRatio || 1\nconst canvas = document.createElement('canvas')\nconst context = canvas.getContext('2d')\nconst fit = createFit(canvas, { scale })\ndocument.body.style.margin = '0'\ndocument.querySelector('.canvas-container').appendChild(canvas)\n\nfunction render(width: number, height: number) {\n  createScene(context, width, height)\n}\n\nconst onResize = () => {\n  const [width, height] = fit()\n  render(width * scale, height * scale)\n}\n\nonResize()\nwindow.addEventListener('resize', onResize)\n\nif ((module as any).hot) {\n  ;(module as any).hot.dispose(() => canvas.remove())\n}\n"]}