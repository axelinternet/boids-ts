{"id":"../node_modules/gl-vec2/cross.js","dependencies":[{"name":"/Users/accurat_alberto/Code/accurat/kf/boids/package.json","includedInParent":true,"mtime":1538915741000},{"name":"/Users/accurat_alberto/Code/accurat/kf/boids/node_modules/gl-vec2/package.json","includedInParent":true,"mtime":499162500000}],"generated":{"js":"module.exports = cross\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0]\n    out[0] = out[1] = 0\n    out[2] = z\n    return out\n}","map":{"mappings":[{"source":"../node_modules/gl-vec2/cross.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/gl-vec2/cross.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/gl-vec2/cross.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/gl-vec2/cross.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/gl-vec2/cross.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/gl-vec2/cross.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/gl-vec2/cross.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/gl-vec2/cross.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/gl-vec2/cross.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/gl-vec2/cross.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/gl-vec2/cross.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/gl-vec2/cross.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/gl-vec2/cross.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/gl-vec2/cross.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/gl-vec2/cross.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/gl-vec2/cross.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/gl-vec2/cross.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}}],"sources":{"../node_modules/gl-vec2/cross.js":"module.exports = cross\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nfunction cross(out, a, b) {\n    var z = a[0] * b[1] - a[1] * b[0]\n    out[0] = out[1] = 0\n    out[2] = z\n    return out\n}"},"lineCount":17}},"hash":"d7122bbf2f04973ba8df4a5f9bd4fdbe","cacheData":{"env":{}}}